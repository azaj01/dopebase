'use strict'

const schema = {
  tag_categories: {
    fields: {
      name: { type: 'string', required: false, displayName: 'Name' },
      slug: { type: 'string', required: false, displayName: 'Slug' },
      logo_url: { type: 'photo', required: false, displayName: 'Logo' },
      published: { type: 'boolean', required: true, displayName: 'Published' },
      parent_id: {
        type: 'string',
        required: false,
        displayName: 'Parent Category',
        foreignKey: 'tag_categories',
        cellClassName: 'ParentTagCategory',
        typeaheadRenderers: {
          dataItemRenderer: `<table key={data.id}><tr><td><img src={data.photo} /></td><td><span>{data.name}</span></td></tr></table>`,
          originalDataFormatter: `data.name`,
        },
      },
    },
    displayName: 'Categories',
    tableName: 'tag_categories',
    singularName: 'category',
    singularCapitalName: 'Category',
    lowercasePluralName: 'categories',
    titleFieldKey: 'name',
  },
  tags: {
    fields: {
      name: { type: 'string', required: false, displayName: 'Name' },
      slug: { type: 'string', required: false, displayName: 'Slug' },
      logo_url: { type: 'photo', required: false, displayName: 'Logo' },
      published: { type: 'boolean', required: true, displayName: 'Published' },
      tag_category_id: {
        type: 'string',
        required: false,
        displayName: 'Tag Category',
        foreignKey: 'tag_categories',
        cellClassName: 'TagCategory',
        typeaheadRenderers: {
          dataItemRenderer: `<table key={data.id}><tr><td><img src={data.photo} /></td><td><span>{data.name}</span></td></tr></table>`,
          originalDataFormatter: `data.name`,
        },
      },
    },
    displayName: 'Tags',
    tableName: 'tags',
    singularName: 'tag',
    singularCapitalName: 'Tag',
    lowercasePluralName: 'tags',
    titleFieldKey: 'name',
  },
  products: {
    fields: {
      title: { type: 'string', required: false, displayName: 'Title' },
      subtitle: { type: 'string', required: false, displayName: 'Subtitle' },
      published: { type: 'boolean', required: true, displayName: 'Published' },
      second_title: {
        type: 'string',
        required: false,
        displayName: 'Second Title',
      },
      second_subtitle: {
        type: 'string',
        required: false,
        displayName: 'Second Subtitle',
      },
      cover_photo_url: {
        type: 'photo',
        required: false,
        displayName: 'Cover Photo',
      },
      preview_section_title: {
        type: 'string',
        required: false,
        displayName: 'Preview Section Title',
      },
      preview_photo_urls: {
        type: 'photos',
        required: false,
        displayName: 'Preview Photos',
      },
      all_previews_html: {
        type: 'code',
        required: false,
        displayName: 'All Previews HTML',
      },
      demo_image_url: {
        type: 'photo',
        required: false,
        displayName: 'Demo Image URL',
      },
      demo_video_url: {
        type: 'string',
        required: false,
        displayName: 'Demo Video URL',
      },
      app_store_demo_url: {
        type: 'string',
        required: false,
        displayName: 'App Store Demo',
      },
      play_store_demo_url: {
        type: 'string',
        required: false,
        displayName: 'Play Store Demo',
      },
      whats_included_html: {
        type: 'code',
        required: false,
        displayName: "What's Included HTML",
      },
      main_features_html: {
        type: 'code',
        required: false,
        displayName: 'Main Features HTML',
      },
      all_features_html: {
        type: 'code',
        required: false,
        displayName: 'All Features HTML',
      },
      seo_keyword: {
        type: 'string',
        required: false,
        displayName: 'SEO Keyword',
      },
      seo_title: {
        type: 'string',
        required: false,
        displayName: 'SEO Title',
      },
      seo_description: {
        type: 'string',
        required: false,
        displayName: 'SEO Description',
      },
      description_html: {
        type: 'code',
        required: false,
        displayName: 'Description Content HTML',
      },
      slug: { type: 'string', required: false, displayName: 'Slug' },
      is_free: { type: 'boolean', required: true, displayName: 'Is Free?' },
      created_at: { type: 'date', required: true, displayName: 'Created Date' },
      author_id: {
        type: 'string',
        required: false,
        displayName: 'Author',
        foreignKey: 'users',
        cellClassName: 'ProductAuthor',
        typeaheadRenderers: {
          dataItemRenderer: `<table key={data.id}><tr><td><img src={data.profile_picture_url} /></td><td><span>{data.first_name} {data.last_name} ({data.email})</span></td></tr></table>`,
          originalDataFormatter: `data.first_name + " " + data.last_name`,
        },
      },
      tags: {
        type: 'array',
        subtype: 'ids',
        cellClassName: 'ProductTags',
        required: false,
        displayName: 'Tags',
        foreignKeys: 'tags',
        typeaheadRenderers: {
          dataItemRenderer: `<table key={data.id}><tr><td><span>{data.name}</span></td></tr></table>`,
          originalDataFormatter: `data.name`,
        },
      },
    },
    displayName: 'Products',
    tableName: 'products',
    singularName: 'product',
    singularCapitalName: 'Product',
    lowercasePluralName: 'products',
    titleFieldKey: 'title',
  },
  product_variants: {
    fields: {
      price: { type: 'string', required: false, displayName: 'Price' },
      fastspring_slug: {
        type: 'string',
        required: false,
        displayName: 'FastSpring Slug',
      },
      created_at: { type: 'date', required: true, displayName: 'Created Date' },
      product_id: {
        type: 'string',
        required: true,
        displayName: 'Product',
        foreignKey: 'products',
        cellClassName: 'ProductVariantProduct',
        typeaheadRenderers: {
          dataItemRenderer: `<table key={data.id}><tr><td><img src={data.coverPhotoURL} /></td><td><span>{data.title}</span></td></tr></table>`,
          originalDataFormatter: `data.title`,
        },
      },
    },
    displayName: 'Product Variants',
    tableName: 'product_variants',
    singularName: 'variant',
    singularCapitalName: 'Variant',
    lowercasePluralName: 'variants',
    titleFieldKey: 'id',
  },
  freebie_variants: {
    fields: {
      download_url: {
        type: 'string',
        required: false,
        displayName: 'Download URL',
      },
      created_at: { type: 'date', required: true, displayName: 'Created Date' },
      product_id: {
        type: 'string',
        required: true,
        displayName: 'Product',
        foreignKey: 'products',
        cellClassName: 'FreebieVariantProduct',
        typeaheadRenderers: {
          dataItemRenderer: `<table key={data.id}><tr><td><img src={data.coverPhotoURL} /></td><td><span>{data.title}</span></td></tr></table>`,
          originalDataFormatter: `data.title`,
        },
      },
    },
    displayName: 'Freebie Variants',
    tableName: 'freebie_variants',
    singularName: 'variant',
    singularCapitalName: 'Variant',
    lowercasePluralName: 'freebie-variants',
    titleFieldKey: 'id',
  },
  freebie_downloads: {
    fields: {
      customer_email: {
        type: 'string',
        required: false,
        displayName: 'Customer E-mail',
      },
      created_at: { type: 'date', required: true, displayName: 'Created Date' },
      updated_at: {
        type: 'date',
        required: false,
        displayName: 'Updated Date',
      },
      user_id: {
        type: 'string',
        required: false,
        displayName: 'Customer',
        foreignKey: 'users',
        cellClassName: 'FreebieDownloadCustomer',
        typeaheadRenderers: {
          dataItemRenderer: `<table key={data.id}><tr><td><img src={data.profile_picture_url} /></td><td><span>{data.first_name} {data.last_name} ({data.email})</span></td></tr></table>`,
          originalDataFormatter: `data.first_name + " " + data.last_name`,
        },
      },
      freebie_variant_id: {
        type: 'string',
        required: false,
        displayName: 'Freebie Variant',
        foreignKey: 'freebie_variants',
        cellClassName: 'DownloadFreebieVariant',
        typeaheadRenderers: {
          dataItemRenderer: `<table key={data.id}><tr><td><span>{data.id} ({data.customer_email})</span></td></tr></table>`,
          originalDataFormatter: `data.id`,
        },
      },
    },
    displayName: 'FreebieDownloads',
    tableName: 'freebie_downloads',
    singularName: 'download',
    singularCapitalName: 'Download',
    lowercasePluralName: 'downloads',
    titleFieldKey: 'customer_email',
  },
  purchases: {
    fields: {
      license_no: {
        type: 'string',
        required: false,
        displayName: 'License No.',
      },
      customer_email: {
        type: 'string',
        required: false,
        displayName: 'Customer E-mail',
      },
      fastspring_product_slug: {
        type: 'string',
        required: false,
        displayName: 'FS Product',
      },
      invoice_url: {
        type: 'string',
        required: false,
        displayName: 'Invoice URL',
      },
      fastspring_download_url: {
        type: 'string',
        required: false,
        displayName: 'Download URL',
      },
      total_in_payout_currency: {
        type: 'string',
        required: false,
        displayName: 'Total Price $',
      },
      created_at: { type: 'date', required: true, displayName: 'Created Date' },
      payment_type: {
        type: 'string',
        required: false,
        displayName: 'Payment Type',
      },
      country: {
        type: 'string',
        required: false,
        displayName: 'Country',
      },
      user_id: {
        type: 'string',
        required: false,
        displayName: 'Customer',
        foreignKey: 'users',
        cellClassName: 'PurchaseCustomer',
        typeaheadRenderers: {
          dataItemRenderer: `<table key={data.id}><tr><td><img src={data.profile_picture_url} /></td><td><span>{data.first_name} {data.last_name} ({data.email})</span></td></tr></table>`,
          originalDataFormatter: `data.first_name + " " + data.last_name`,
        },
      },
      variant_id: {
        type: 'string',
        required: false,
        displayName: 'Product Variant',
        foreignKey: 'product_variants',
        cellClassName: 'PurchaseProductVariant',
        typeaheadRenderers: {
          dataItemRenderer: `<table key={data.id}><tr><td><span>{data.fastspring_slug} ({data.price})</span></td></tr></table>`,
          originalDataFormatter: `data.fastspring_slug + " $" + data.price`,
        },
      },
    },
    displayName: 'Purchases',
    tableName: 'purchases',
    singularName: 'purchase',
    singularCapitalName: 'Purchase',
    lowercasePluralName: 'purchases',
    titleFieldKey: 'license_no',
  },
  reviews: {
    fields: {
      author_id: {
        type: 'string',
        required: false,
        displayName: 'Author',
        foreignKey: 'users',
        cellClassName: 'ReviewsAuthor',
        typeaheadRenderers: {
          dataItemRenderer: `<table key={data.id}><tr><td><img src={data.profile_picture_url} /></td><td><span>{data.first_name} {data.last_name} ({data.email})</span></td></tr></table>`,
          originalDataFormatter: `data.first_name + " " + data.last_name`,
        },
      },
      product_id: {
        type: 'string',
        required: false,
        displayName: 'Product',
        foreignKey: 'products',
        cellClassName: 'ReviewsProduct',
        typeaheadRenderers: {
          dataItemRenderer: `<table key={data.id}><tr><td><img src={data.coverPhotoURL} /></td><td><span>{data.title}</span></td></tr></table>`,
          originalDataFormatter: `data.title`,
        },
      },
      content: { type: 'string', required: false, displayName: 'Content' },
      star_count: { type: 'string', required: false, displayName: 'Stars' },
      created_at: { type: 'date', required: true, displayName: 'Date' },
    },
    displayName: 'Reviews',
    tableName: 'customer_reviews',
    singularName: 'review',
    singularCapitalName: 'Review',
    lowercasePluralName: 'reviews',
    titleFieldKey: 'starCount',
  },
  email_subscribers: {
    fields: {
      email: { type: 'string', required: true, displayName: 'Email' },
      first_name: {
        type: 'string',
        required: false,
        displayName: 'First Name',
      },
      last_name: { type: 'string', required: false, displayName: 'Last Name' },
      email: { type: 'string', required: true, displayName: 'Email' },
      unsubscribed: {
        type: 'boolean',
        required: true,
        displayName: 'Unsubscribed',
      },
      tags: {
        type: 'array',
        subtype: 'ids',
        cellClassName: 'EmailSubscriberTags',
        required: false,
        displayName: 'SubscriberTags',
        foreignKeys: 'email_subscriber_tags',
        typeaheadRenderers: {
          dataItemRenderer: `<table key={data.id}><tr><td><span>{data.name}</span></td></tr></table>`,
          originalDataFormatter: `data.name`,
        },
      },
      created_at: { type: 'date', required: true, displayName: 'Created Date' },
    },
    displayName: 'EmailSubscribers',
    tableName: 'email_subscribers',
    singularName: 'emailSubscriber',
    singularCapitalName: 'EmailSubscriber',
    lowercasePluralName: 'emailSubscribers',
    titleFieldKey: 'email',
  },
  email_subscriber_tags: {
    fields: {
      name: { type: 'string', required: true, displayName: 'Name' },
      published: {
        type: 'boolean',
        required: true,
        displayName: 'Published',
      },
      created_at: { type: 'date', required: true, displayName: 'Created Date' },
    },
    displayName: 'EmailSubscribersTags',
    tableName: 'email_subscriber_tags',
    singularName: 'emailSubscriberTag',
    singularCapitalName: 'EmailSubscriberTag',
    lowercasePluralName: 'emailSubscriberTags',
    titleFieldKey: 'name',
  },
  email_campaigns: {
    fields: {
      title: { type: 'string', required: false, displayName: 'Title' },
      email_subject: {
        type: 'string',
        required: false,
        displayName: 'Email Subject',
      },
      email_content: {
        type: 'code',
        required: false,
        displayName: 'Email Content',
      },
      trigger: {
        type: 'enum',
        required: true,
        displayName: 'Trigger',
        enum: [
          'email_trigger_none',
          'email_trigger_demo_link_requested',
          'email_trigger_support_ticket_created',
          'email_trigger_support_ticket_closed',
          'email_trigger_support_message_incoming',
          'email_trigger_support_message_outgoing',
          'email_trigger_support_paid_order_placed',
          'email_trigger_support_free_order_placed',
        ],
      },
      timing_type: {
        type: 'enum',
        required: false,
        displayName: 'Timing',
        enum: ['immediately', 'delayed'],
      },
      delay_in_seconds: {
        type: 'string',
        required: false,
        displayName: 'Delay (seconds)',
      },
      active: {
        type: 'boolean',
        required: true,
        displayName: 'Active',
      },
      published: {
        type: 'boolean',
        required: true,
        displayName: 'Published',
      },
      filters: {
        type: 'array',
        subtype: 'ids',
        cellClassName: 'CampaignFilterTags',
        required: false,
        displayName: 'CampaignFilterTags',
        foreignKeys: 'email_subscriber_tags',
        typeaheadRenderers: {
          dataItemRenderer: `<table key={data.id}><tr><td><span>{data.name}</span></td></tr></table>`,
          originalDataFormatter: `data.name`,
        },
      },
      updated_at: { type: 'date', required: false, displayName: 'Update Date' },
      created_at: { type: 'date', required: true, displayName: 'Created Date' },
    },
    displayName: 'EmailCampaigns',
    tableName: 'email_campaigns',
    singularName: 'emailCampaign',
    singularCapitalName: 'EmailCampaign',
    lowercasePluralName: 'emailCampaigns',
    titleFieldKey: 'title',
  },
  email_newsletters: {
    fields: {
      title: { type: 'string', required: false, displayName: 'Title' },
      email_subject: {
        type: 'string',
        required: false,
        displayName: 'Email Subject',
      },
      email_content: {
        type: 'code',
        required: false,
        displayName: 'Email Content',
      },
      filters: {
        type: 'array',
        subtype: 'ids',
        cellClassName: 'NewsletterFilterTags',
        required: false,
        displayName: 'NewsletterFilterTags',
        foreignKeys: 'email_subscriber_tags',
        typeaheadRenderers: {
          dataItemRenderer: `<table key={data.id}><tr><td><span>{data.name}</span></td></tr></table>`,
          originalDataFormatter: `data.name`,
        },
      },
      status: {
        type: 'enum',
        required: true,
        displayName: 'Status',
        enum: ['draft', 'in_progress', 'complete'],
      },
      updated_at: { type: 'date', required: false, displayName: 'Update Date' },
      created_at: { type: 'date', required: true, displayName: 'Created Date' },
    },
    displayName: 'Newsletters',
    tableName: 'email_newsletters',
    singularName: 'newsletter',
    singularCapitalName: 'Newsletter',
    lowercasePluralName: 'newsletters',
    titleFieldKey: 'title',
  },
  job_queue: {
    fields: {
      id: { type: 'string', required: false, displayName: 'ID' },
      type: {
        type: 'string',
        required: false,
        displayName: 'Type',
      },
      status: {
        type: 'string',
        required: false,
        displayName: 'Status',
      },
      start_time: {
        type: 'string',
        required: false,
        displayName: 'Start Time',
      },
      priority: {
        type: 'string',
        required: false,
        displayName: 'Priority',
      },
      updated_at: { type: 'date', required: false, displayName: 'Update Date' },
      created_at: {
        type: 'date',
        required: false,
        displayName: 'Created Date',
      },
    },
    displayName: 'JobQueue',
    tableName: 'job_queue',
    singularName: 'job',
    singularCapitalName: 'JobQueue',
    lowercasePluralName: 'jobs',
    titleFieldKey: 'id',
  },
  email_settings: {
    fields: {
      display_name: {
        type: 'string',
        required: true,
        displayName: 'Display Name',
      },
      key: {
        type: 'string',
        required: true,
        displayName: 'Settings Name (key)',
      },
      value: { type: 'string', required: true, displayName: 'Settings Value' },
    },
    displayName: 'EmailSettings',
    tableName: 'email_settings',
    singularName: 'emailSettings',
    singularCapitalName: 'EmailSettings',
    lowercasePluralName: 'emailSettings',
    titleFieldKey: 'display_name',
  },

  emails: {
    fields: {
      to: { type: 'string', required: false, displayName: 'To' },
      content: { type: 'string', required: false, displayName: 'Content' },
      token: { type: 'string', required: true, displayName: 'Token' },
      from: { type: 'string', required: false, displayName: 'From' },
      created_at: { type: 'date', required: true, displayName: 'Created Date' },

      campaign_id: {
        type: 'string',
        required: false,
        displayName: 'Campaign',
        foreignKey: 'email_campaigns',
        cellClassName: 'EmailCampaign',
        typeaheadRenderers: {
          dataItemRenderer: `<table key={data.id}><tr><td><span>{data.title}</span></td></tr></table>`,
          originalDataFormatter: `data.title`,
        },
      },
    },
    displayName: 'Emails',
    tableName: 'emails',
    singularName: 'email',
    singularCapitalName: 'Email',
    lowercasePluralName: 'emails',
    titleFieldKey: 'id',
  },

  articles: {
    fields: {
      title: { type: 'string', required: false, displayName: 'Title' },
      content: { type: 'markdown', required: false, displayName: 'Content' },
      table_of_contents: {
        type: 'code',
        required: false,
        displayName: 'Table Of Contents',
      },
      cover_photo: {
        type: 'photo',
        required: false,
        displayName: 'Cover Photo',
      },
      photo_urls: {
        type: 'photos',
        required: false,
        displayName: 'Photos',
      },
      source_code_url: {
        type: 'string',
        required: false,
        displayName: 'Github URL',
      },
      canonical_url: {
        type: 'string',
        required: false,
        displayName: 'Canonical URL',
      },
      published: { type: 'boolean', required: true, displayName: 'Published' },
      outdated: { type: 'boolean', required: true, displayName: 'Outdated' },
      slug: { type: 'string', required: false, displayName: 'Slug' },
      seo_title: { type: 'string', required: false, displayName: 'SEO Title' },
      seo_description: {
        type: 'string',
        required: false,
        displayName: 'SEO Description',
      },
      seo_keyword: {
        type: 'string',
        required: false,
        displayName: 'SEO Keyword',
      },
      author_id: {
        type: 'string',
        required: false,
        displayName: 'Author',
        foreignKey: 'users',
        cellClassName: 'ArticleAuthor',
        typeaheadRenderers: {
          dataItemRenderer: `<table key={data.id}><tr><td><img src={data.profile_picture_url} /></td><td><span>{data.first_name} {data.last_name} ({data.email})</span></td></tr></table>`,
          originalDataFormatter: `data.first_name + " " + data.last_name`,
        },
      },
      category_id: {
        type: 'string',
        required: false,
        displayName: 'Category',
        foreignKey: 'article_categories',
        cellClassName: 'ArticleCategory',
        typeaheadRenderers: {
          dataItemRenderer: `<table key={data.id}><tr><td><span>{data.name}</span></td></tr></table>`,
          originalDataFormatter: `data.name`,
        },
      },
      tags: {
        type: 'array',
        subtype: 'ids',
        cellClassName: 'ArticleTags',
        required: false,
        displayName: 'ArticleTags',
        foreignKeys: 'article_tags',
        typeaheadRenderers: {
          dataItemRenderer: `<table key={data.id}><tr><td><span>{data.name}</span></td></tr></table>`,
          originalDataFormatter: `data.name`,
        },
      },
      created_at: { type: 'date', required: true, displayName: 'Created At' },
      updated_at: { type: 'date', required: true, displayName: 'Updated At' },
    },
    displayName: 'Articles',
    tableName: 'articles',
    singularName: 'article',
    singularCapitalName: 'Article',
    lowercasePluralName: 'articles',
    titleFieldKey: 'title',
  },
  article_categories: {
    fields: {
      name: { type: 'string', required: false, displayName: 'Name' },
      description: {
        type: 'markdown',
        required: false,
        displayName: 'Description',
      },
      slug: { type: 'string', required: false, displayName: 'Slug' },
      logo_url: { type: 'photo', required: false, displayName: 'Logo' },
      seo_title: { type: 'string', required: false, displayName: 'SEO Title' },
      seo_description: {
        type: 'string',
        required: false,
        displayName: 'SEO Description',
      },
      canonical_url: {
        type: 'string',
        required: false,
        displayName: 'Canonical URL',
      },
      seo_image_url: {
        type: 'photo',
        required: false,
        displayName: 'SEO Cover Image',
      },
      published: { type: 'boolean', required: true, displayName: 'Published' },
      parent_id: {
        type: 'string',
        required: false,
        displayName: 'Parent Category',
        foreignKey: 'article_categories',
        cellClassName: 'ParentArticleCategory',
        typeaheadRenderers: {
          dataItemRenderer: `<table key={data.id}><tr><td><span>{data.name}</span></td></tr></table>`,
          originalDataFormatter: `data.name`,
        },
      },
    },
    displayName: 'Article Tag Categories',
    tableName: 'article_tag_categories',
    singularName: 'category',
    singularCapitalName: 'Category',
    lowercasePluralName: 'categories',
    titleFieldKey: 'name',
  },
  article_tags: {
    fields: {
      name: { type: 'string', required: true, displayName: 'Name' },
      description: {
        type: 'markdown',
        required: false,
        displayName: 'Description',
      },
      published: {
        type: 'boolean',
        required: true,
        displayName: 'Published',
      },
      seo_title: { type: 'string', required: false, displayName: 'SEO Title' },
      seo_description: {
        type: 'string',
        required: false,
        displayName: 'SEO Description',
      },
      canonical_url: {
        type: 'string',
        required: false,
        displayName: 'Canonical URL',
      },
      seo_image_url: {
        type: 'photo',
        required: false,
        displayName: 'SEO Cover Image',
      },
      created_at: { type: 'date', required: true, displayName: 'Created Date' },
    },
    displayName: 'ArticleTags',
    tableName: 'article_tags',
    singularName: 'articleTag',
    singularCapitalName: 'ArticleTag',
    lowercasePluralName: 'articleTags',
    titleFieldKey: 'name',
  },
  author_articles: {
    fields: {
      title: { type: 'string', required: false, displayName: 'Title' },
      content: { type: 'markdown', required: false, displayName: 'Content' },
      table_of_contents: {
        type: 'code',
        required: false,
        displayName: 'Table Of Contents',
      },
      cover_photo: {
        type: 'photo',
        required: false,
        displayName: 'Cover Photo',
      },
      photo_urls: {
        type: 'photos',
        required: false,
        displayName: 'Photos',
      },
      source_code_url: {
        type: 'string',
        required: false,
        displayName: 'Github URL',
      },
      canonical_url: {
        type: 'string',
        required: false,
        displayName: 'Canonical URL',
      },
      slug: { type: 'string', required: false, displayName: 'Slug' },
      seo_title: { type: 'string', required: false, displayName: 'SEO Title' },
      seo_description: {
        type: 'string',
        required: false,
        displayName: 'SEO Description',
      },
      seo_keyword: {
        type: 'string',
        required: false,
        displayName: 'SEO Keyword',
      },
      category_id: {
        type: 'string',
        required: false,
        displayName: 'Category',
        foreignKey: 'article_categories',
        cellClassName: 'ArticleCategory',
        typeaheadRenderers: {
          dataItemRenderer: `<table key={data.id}><tr><td><span>{data.name}</span></td></tr></table>`,
          originalDataFormatter: `data.name`,
        },
      },
      created_at: { type: 'date', required: true, displayName: 'Created At' },
      updated_at: { type: 'date', required: true, displayName: 'Updated At' },
    },
    displayName: 'Articles',
    tableName: 'articles',
    singularName: 'article',
    singularCapitalName: 'Article',
    lowercasePluralName: 'articles',
    titleFieldKey: 'title',
  },
  ticket_threads: {
    fields: {
      number: { type: 'string', required: false, displayName: 'Ticket No.' },
      subject: { type: 'string', required: false, displayName: 'Subject' },
      author_email: {
        type: 'string',
        required: false,
        displayName: 'Author Email',
      },
      author_name: {
        type: 'string',
        required: false,
        displayName: 'Author Name',
      },
      is_closed: { type: 'boolean', required: true, displayName: 'Closed' },
      is_public: { type: 'boolean', required: true, displayName: 'Public' },

      message_count: {
        type: 'string',
        required: false,
        displayName: 'Messages No.',
      },

      user_id: {
        type: 'string',
        required: false,
        displayName: 'Author',
        foreignKey: 'users',
        cellClassName: 'TicketThreadAuthor',
        typeaheadRenderers: {
          dataItemRenderer: `<table key={data.id}><tr><td><img src={data.profile_picture_url} /></td><td><span>{data.first_name} {data.last_name} ({data.email})</span></td></tr></table>`,
          originalDataFormatter: `data.first_name + " " + data.last_name`,
        },
      },

      tags: {
        type: 'array',
        subtype: 'ids',
        cellClassName: 'TicketThreadTags',
        required: false,
        displayName: 'TicketThreadTags',
        foreignKeys: 'ticket_tags',
        typeaheadRenderers: {
          dataItemRenderer: `<table key={data.id}><tr><td><span>{data.name}</span></td></tr></table>`,
          originalDataFormatter: `data.name`,
        },
      },

      created_at: { type: 'date', required: true, displayName: 'Created At' },
      updated_at: { type: 'date', required: true, displayName: 'Updated At' },
    },
    displayName: 'TicketThreads',
    tableName: 'ticket_threads',
    singularName: 'thread',
    singularCapitalName: 'Thread',
    lowercasePluralName: 'threads',
    titleFieldKey: 'subject',
  },
  ticket_messages: {
    fields: {
      author_email: {
        type: 'string',
        required: false,
        displayName: 'Author Email',
      },
      from_original_poster: {
        type: 'boolean',
        required: true,
        displayName: 'From OP',
      },
      message: { type: 'markdown', required: false, displayName: 'Message' },
      user_id: {
        type: 'string',
        required: false,
        displayName: 'Author',
        foreignKey: 'users',
        cellClassName: 'TicketMessageAuthor',
        typeaheadRenderers: {
          dataItemRenderer: `<table key={data.id}><tr><td><img src={data.profile_picture_url} /></td><td><span>{data.first_name} {data.last_name} ({data.email})</span></td></tr></table>`,
          originalDataFormatter: `data.first_name + " " + data.last_name`,
        },
      },

      thread_id: {
        type: 'string',
        required: false,
        displayName: 'Thread',
        foreignKey: 'ticket_threads',
        cellClassName: 'TicketMessageThread',
        typeaheadRenderers: {
          dataItemRenderer: `<table key={data.id}><tr><td><span>#{data.number}</span></td></tr></table>`,
          originalDataFormatter: `data.number + " " + data.subject`,
        },
      },

      created_at: { type: 'date', required: true, displayName: 'Created At' },
      updated_at: { type: 'date', required: true, displayName: 'Updated At' },
    },
    displayName: 'TicketMessages',
    tableName: 'ticket_messages',
    singularName: 'message',
    singularCapitalName: 'Message',
    lowercasePluralName: 'messages',
    titleFieldKey: 'subject',
  },
  ticket_tags: {
    fields: {
      name: { type: 'string', required: true, displayName: 'Name' },
      slug: { type: 'string', required: false, displayName: 'Slug' },
      published: {
        type: 'boolean',
        required: true,
        displayName: 'Published',
      },
      created_at: { type: 'date', required: true, displayName: 'Created Date' },
    },
    displayName: 'TicketTags',
    tableName: 'ticket_tags',
    singularName: 'ticketTag',
    singularCapitalName: 'TicketTag',
    lowercasePluralName: 'ticketTags',
    titleFieldKey: 'name',
  },
  users: {
    displayName: 'Users',
    tableName: 'users',
    singularName: 'user',
    singularCapitalName: 'User',
    lowercasePluralName: 'users',
    titleFieldKey: 'firstName',
    fields: {
      email: { type: 'string', required: true, displayName: 'Email' },
      first_name: {
        type: 'string',
        required: false,
        displayName: 'First Name',
      },
      last_name: { type: 'string', required: false, displayName: 'Last Name' },
      phone: { type: 'string', required: false, displayName: 'Phone' },
      role: { type: 'string', required: false, displayName: 'Role' },
      bio_title: {
        type: 'string',
        required: false,
        displayName: 'Short Bio',
      },
      bio_description: {
        type: 'markdown',
        required: false,
        displayName: 'Long Bio',
      },
      website_url: {
        type: 'string',
        required: false,
        displayName: 'Website URL',
      },
      username: {
        type: 'string',
        required: false,
        displayName: 'Username',
      },
      banned: {
        type: 'boolean',
        required: true,
        displayName: 'Banned',
      },
      tags: {
        type: 'array',
        subtype: 'ids',
        cellClassName: 'UserTags',
        required: false,
        displayName: 'Tags',
        foreignKeys: 'user_tags',
        typeaheadRenderers: {
          dataItemRenderer: `<table key={data.id}><tr><td><span>{data.name}</span></td></tr></table>`,
          originalDataFormatter: `data.name`,
        },
      },
      created_at: { type: 'date', required: true, displayName: 'Created At' },
      updated_at: { type: 'date', required: true, displayName: 'Updated At' },
    },
  },
  user_tags: {
    fields: {
      name: { type: 'string', required: true, displayName: 'Name' },
      published: {
        type: 'boolean',
        required: true,
        displayName: 'Published',
      },
      created_at: { type: 'date', required: true, displayName: 'Created Date' },
    },
    displayName: 'UserTags',
    tableName: 'user_tags',
    singularName: 'userTag',
    singularCapitalName: 'UserTag',
    lowercasePluralName: 'userTags',
    titleFieldKey: 'name',
  },
  mapRenderers: {
    categories: `{
            const path = viewPath && viewPath[index]
            return (
                <li>
                    <a href={path}>
                       {data.name}
                    </a>
                </li>
            )
        }`,
  },
  article_ideas: {
    fields: {
      title: { type: 'string', required: true, displayName: 'Title' },
      sections: { type: 'string', required: false, displayName: 'Sections' },
      tags: { type: 'string', required: false, displayName: 'Tags' },
      status: { type: 'string', required: false, displayName: 'Status' },
      extra_prompt: {
        type: 'string',
        required: false,
        displayName: 'Extra Prompt',
      },
      social_media_post: {
        type: 'string',
        required: false,
        displayName: 'Social Media',
      },
      seo_description: {
        type: 'string',
        required: false,
        displayName: 'SEO Description',
      },
      summary: { type: 'string', required: false, displayName: 'Summary' },
      topic: { type: 'string', required: false, displayName: 'Topic' },
      category: { type: 'string', required: false, displayName: 'Category' },
      created_at: { type: 'date', required: true, displayName: 'Created Date' },
      updated_at: { type: 'date', required: true, displayName: 'Created Date' },
    },
    displayName: 'Ideas',
    tableName: 'article_ideas',
    singularName: 'articleIdea',
    singularCapitalName: 'ArticleIdea',
    lowercasePluralName: 'articleIdeas',
    titleFieldKey: 'title',
  },
}

module.exports = schema
